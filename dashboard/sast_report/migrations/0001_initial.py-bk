# Generated by Django 5.2.5 on 2025-09-29 06:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('private', models.BooleanField(default=False)),
                ('default_branch', models.CharField(default='main', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Repositories',
            },
        ),
        migrations.CreateModel(
            name='DashboardPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_view_dashboard', models.BooleanField(default=True)),
                ('can_trigger_scans', models.BooleanField(default=True)),
                ('can_manage_schedules', models.BooleanField(default=False)),
                ('can_view_reports', models.BooleanField(default=True)),
                ('can_manage_false_positives', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
            options={
                'verbose_name': 'Dashboard Permission',
                'verbose_name_plural': 'Dashboard Permissions',
            },
        ),
        migrations.CreateModel(
            name='ScanSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('custom', 'Custom')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sast_report.repository')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScanJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(default='main', max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('triggered_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('findings_count', models.IntegerField(default=0)),
                ('critical_count', models.IntegerField(default=0)),
                ('high_count', models.IntegerField(default=0)),
                ('medium_count', models.IntegerField(default=0)),
                ('low_count', models.IntegerField(default=0)),
                ('info_count', models.IntegerField(default=0)),
                ('log', models.TextField(blank=True)),
                ('scan_duration', models.DurationField(blank=True, null=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='sast_report.repository')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sast_report.scanschedule')),
            ],
            options={
                'ordering': ['-triggered_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSCMProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scm_type', models.CharField(choices=[('github', 'GitHub'), ('gitlab', 'GitLab'), ('bitbucket', 'Bitbucket')], max_length=10)),
                ('access_token', models.CharField(max_length=255)),
                ('api_url', models.URLField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SCM Profile',
                'verbose_name_plural': 'SCM Profiles',
            },
        ),
        migrations.AddField(
            model_name='repository',
            name='scm_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sast_report.userscmprofile'),
        ),
        migrations.CreateModel(
            name='VulnerabilityReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_id', models.CharField(max_length=200)),
                ('severity', models.CharField(choices=[('CRITICAL', 'Critical'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low'), ('INFO', 'Info')], max_length=10)),
                ('confidence', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='MEDIUM', max_length=10)),
                ('file_path', models.CharField(max_length=500)),
                ('line_number', models.IntegerField()),
                ('message', models.TextField()),
                ('description', models.TextField()),
                ('recommendation', models.TextField()),
                ('code_snippet', models.TextField(blank=True)),
                ('cwe_id', models.CharField(blank=True, max_length=20)),
                ('owasp_category', models.CharField(blank=True, max_length=100)),
                ('metadata', models.TextField(default='{}')),
                ('is_false_positive', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scan_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vulnerabilities', to='sast_report.scanjob')),
            ],
            options={
                'ordering': ['-severity', 'file_path', 'line_number'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='repository',
            unique_together={('scm_profile', 'repo_id')},
        ),
    ]
